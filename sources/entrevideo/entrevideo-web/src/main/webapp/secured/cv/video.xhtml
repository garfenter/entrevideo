<?xml version="1.0" encoding="UTF-8"?>
<ui:composition 
    xmlns:ui="http://java.sun.com/jsf/facelets" 
    template="/WEB-INF/templates/secured-template.xhtml"
    xmlns:p="http://primefaces.org/ui"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:ev="http://entrevideo.com.gt/components">
    <ui:define name="content">  
        <fieldset>
            <legend>Video</legend>            
            <div id="widget"></div>
            <div id="player"></div>

            <script>
                // 2. Asynchronously load the Upload Widget and Player API code.
                var tag = document.createElement('script');
                tag.src = "https://www.youtube.com/iframe_api";
                var firstScriptTag = document.getElementsByTagName('script')[0];
                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

                // 3. Define global variables for the widget and the player.
                //    The function loads the widget after the JavaScript code
                //    has downloaded and defines event handlers for callback
                //    notifications related to the widget.
                var widget;
                var player;
                function onYouTubeIframeAPIReady() {
                    jQuery("#loading-msg").html("Cargando...");
                    widget = new YT.UploadWidget('widget', {
                        width: 500,
                        webcamOnly: false,
                        events: {
                            'onUploadSuccess': onUploadSuccess,
                            'onProcessingComplete': onProcessingComplete
                        }
                    });
                }

                // 4. This function is called when a video has been successfully uploaded.
                
                function onUploadSuccess(event) {                    
                    jQuery("#loading-msg").html("Procesando, puede continuar a la siguiente ventana");
                    jQuery(".video-id").val(event.data.videoId);
                }

                // 5. This function is called when a video has been successfully
                //    processed.
                function onProcessingComplete(event) {
                    player = new YT.Player('player', {
                        height: 390,
                        width: 640,
                        videoId: event.data.videoId,
                        events: {}
                    });
                }
            </script>
            <h:form>
                <div id="loading-msg"></div>
                <p:inputText  value="#{videoUI.videoID}" styleClass="video-id"/>
                <p:commandButton action="experiencia" ajax="false" value="Atras" styleClass="btn-atras"/><p:commandButton action="info" ajax="false" value="Siguiente" styleClass="btn-siguiente"/>
            </h:form>
        </fieldset>
    </ui:define>

</ui:composition>